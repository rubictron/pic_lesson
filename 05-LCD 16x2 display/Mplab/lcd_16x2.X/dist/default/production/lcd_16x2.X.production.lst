

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Wed Nov 28 14:40:20 2018

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 1.40
    17                           ; Generated 01/12/2016 GMT
    18                           ; 
    19                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0088                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0006                     _PORTB	set	6
   171  0040                     _RD0	set	64
   172  0041                     _RD1	set	65
   173  0086                     _TRISB	set	134
   174  0440                     _TRISD0	set	1088
   175  0441                     _TRISD1	set	1089
   176                           
   177                           	psect	strings
   178  0003                     __pstrings:	
   179  0003                     stringtab:	
   180  0003                     __stringtab:	
   181  0003                     stringcode:	
   182                           ;	String table - string pointers are 1 byte each
   183                           
   184  0003                     stringdir:	
   185  0003  3000               	movlw	high stringdir
   186  0004  008A               	movwf	10
   187  0005  0804               	movf	4,w
   188  0006  0A84               	incf	4,f
   189  0007  0782               	addwf	2,f
   190  0008                     __stringbase:	
   191  0008  3400               	retlw	0
   192  0009                     __end_of__stringtab:	
   193  0009                     STR_1:	
   194  0009  3448               	retlw	72	;'H'
   195  000A  3465               	retlw	101	;'e'
   196  000B  346C               	retlw	108	;'l'
   197  000C  346C               	retlw	108	;'l'
   198  000D  346F               	retlw	111	;'o'
   199  000E  3420               	retlw	32	;' '
   200  000F  3457               	retlw	87	;'W'
   201  0010  346F               	retlw	111	;'o'
   202  0011  3472               	retlw	114	;'r'
   203  0012  346C               	retlw	108	;'l'
   204  0013  3464               	retlw	100	;'d'
   205  0014  3421               	retlw	33	;'!'
   206  0015  3400               	retlw	0
   207                           
   208                           ; #config settings
   209  0000                     
   210                           	psect	cinit
   211  07FC                     start_initialization:	
   212  07FC                     __initialization:	
   213  07FC                     end_of_initialization:	
   214                           ;End of C runtime variable initialization code
   215                           
   216  07FC                     __end_of__initialization:	
   217  07FC  0183               	clrf	3
   218  07FD  120A  118A  2F5E   	ljmp	_main	;jump to C main() function
   219                           
   220                           	psect	cstackCOMMON
   221  0070                     __pcstackCOMMON:	
   222  0070                     ?_ToggleEpinOfLCD:	
   223  0070                     ??_ToggleEpinOfLCD:	
   224                           ; 1 bytes @ 0x0
   225                           
   226  0070                     ?_WriteCommandToLCD:	
   227                           ; 1 bytes @ 0x0
   228                           
   229  0070                     ?_WriteDataToLCD:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0070                     ?_InitLCD:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0070                     ?_WriteStringToLCD:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ?_ClearLCDScreen:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ?_main:	
   242                           ; 1 bytes @ 0x0
   243                           
   244                           
   245                           ; 1 bytes @ 0x0
   246  0070                     	ds	2
   247  0072                     ??_WriteCommandToLCD:	
   248  0072                     ??_WriteDataToLCD:	
   249                           ; 1 bytes @ 0x2
   250                           
   251  0072                     WriteCommandToLCD@Command:	
   252                           ; 1 bytes @ 0x2
   253                           
   254  0072                     WriteDataToLCD@LCDChar:	
   255                           ; 1 bytes @ 0x2
   256                           
   257                           
   258                           ; 1 bytes @ 0x2
   259  0072                     	ds	1
   260  0073                     ??_InitLCD:	
   261  0073                     ??_WriteStringToLCD:	
   262                           ; 1 bytes @ 0x3
   263                           
   264  0073                     ??_ClearLCDScreen:	
   265                           ; 1 bytes @ 0x3
   266                           
   267                           
   268                           ; 1 bytes @ 0x3
   269  0073                     	ds	1
   270  0074                     WriteStringToLCD@s:	
   271                           
   272                           ; 1 bytes @ 0x4
   273  0074                     	ds	2
   274  0076                     ??_main:	
   275                           
   276                           	psect	maintext
   277  075E                     __pmaintext:	
   278                           ; 1 bytes @ 0x6
   279 ;;
   280 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   281 ;;
   282 ;; *************** function _main *****************
   283 ;; Defined at:
   284 ;;		line 16 in file "Main.c"
   285 ;; Parameters:    Size  Location     Type
   286 ;;		None
   287 ;; Auto vars:     Size  Location     Type
   288 ;;		None
   289 ;; Return value:  Size  Location     Type
   290 ;;                  1    wreg      void 
   291 ;; Registers used:
   292 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   293 ;; Tracked objects:
   294 ;;		On entry : B00/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   298 ;;      Params:         0       0       0       0       0
   299 ;;      Locals:         0       0       0       0       0
   300 ;;      Temps:          0       0       0       0       0
   301 ;;      Totals:         0       0       0       0       0
   302 ;;Total ram usage:        0 bytes
   303 ;; Hardware stack levels required when called:    3
   304 ;; This function calls:
   305 ;;		_ClearLCDScreen
   306 ;;		_InitLCD
   307 ;;		_WriteStringToLCD
   308 ;; This function is called by:
   309 ;;		Startup code after reset
   310 ;; This function uses a non-reentrant model
   311 ;;
   312                           
   313                           
   314                           ;psect for function _main
   315  075E                     _main:	
   316                           
   317                           ;Main.c: 17: InitLCD();
   318                           
   319                           ;incstack = 0
   320                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   321  075E  120A  118A  27A4  120A  118A  	fcall	_InitLCD
   322                           
   323                           ;Main.c: 19: ClearLCDScreen();
   324  0763  120A  118A  274E  120A  118A  	fcall	_ClearLCDScreen
   325                           
   326                           ;Main.c: 20: WriteStringToLCD("Hello World!");
   327  0768  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   328  0769  120A  118A  2788  120A  118A  	fcall	_WriteStringToLCD
   329  076E                     l44:	
   330                           ;Main.c: 22: while (1) {
   331                           
   332  076E  2F6E               	goto	l44
   333  076F                     __end_of_main:	
   334                           
   335                           	psect	text1
   336  0788                     __ptext1:	
   337 ;; *************** function _WriteStringToLCD *****************
   338 ;; Defined at:
   339 ;;		line 60 in file "LCD.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;  s               1    wreg     PTR const unsigned char 
   342 ;;		 -> STR_1(13), 
   343 ;; Auto vars:     Size  Location     Type
   344 ;;  s               1    4[COMMON] PTR const unsigned char 
   345 ;;		 -> STR_1(13), 
   346 ;; Return value:  Size  Location     Type
   347 ;;                  1    wreg      void 
   348 ;; Registers used:
   349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   350 ;; Tracked objects:
   351 ;;		On entry : 0/0
   352 ;;		On exit  : 0/0
   353 ;;		Unchanged: 0/0
   354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   355 ;;      Params:         0       0       0       0       0
   356 ;;      Locals:         1       0       0       0       0
   357 ;;      Temps:          1       0       0       0       0
   358 ;;      Totals:         2       0       0       0       0
   359 ;;Total ram usage:        2 bytes
   360 ;; Hardware stack levels used:    1
   361 ;; Hardware stack levels required when called:    2
   362 ;; This function calls:
   363 ;;		_WriteDataToLCD
   364 ;; This function is called by:
   365 ;;		_main
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           
   370                           ;psect for function _WriteStringToLCD
   371  0788                     _WriteStringToLCD:	
   372                           
   373                           ;incstack = 0
   374                           ; Regs used in _WriteStringToLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   375                           ;WriteStringToLCD@s stored from wreg
   376  0788  00F4               	movwf	WriteStringToLCD@s
   377  0789                     l577:	
   378                           ;LCD.c: 62: while(*s)
   379                           
   380  0789  0874               	movf	WriteStringToLCD@s,w
   381  078A  0084               	movwf	4
   382  078B  120A  118A  2003  120A  118A  	fcall	stringdir
   383  0790  3A00               	xorlw	0
   384  0791  1903               	btfsc	3,2
   385  0792  0008               	return
   386                           
   387                           ;LCD.c: 63: WriteDataToLCD(*s++);
   388  0793  0874               	movf	WriteStringToLCD@s,w
   389  0794  0084               	movwf	4
   390  0795  120A  118A  2003  120A  118A  	fcall	stringdir
   391  079A  120A  118A  2744  120A  118A  	fcall	_WriteDataToLCD
   392  079F  3001               	movlw	1
   393  07A0  00F3               	movwf	??_WriteStringToLCD
   394  07A1  0873               	movf	??_WriteStringToLCD,w
   395  07A2  07F4               	addwf	WriteStringToLCD@s,f
   396  07A3  2F89               	goto	l577
   397  07A4                     __end_of_WriteStringToLCD:	
   398                           
   399                           	psect	text2
   400  0744                     __ptext2:	
   401 ;; *************** function _WriteDataToLCD *****************
   402 ;; Defined at:
   403 ;;		line 21 in file "LCD.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;  LCDChar         1    wreg     unsigned char 
   406 ;; Auto vars:     Size  Location     Type
   407 ;;  LCDChar         1    2[COMMON] unsigned char 
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      void 
   410 ;; Registers used:
   411 ;;		wreg, status,2, status,0, pclath, cstack
   412 ;; Tracked objects:
   413 ;;		On entry : 0/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   417 ;;      Params:         0       0       0       0       0
   418 ;;      Locals:         1       0       0       0       0
   419 ;;      Temps:          0       0       0       0       0
   420 ;;      Totals:         1       0       0       0       0
   421 ;;Total ram usage:        1 bytes
   422 ;; Hardware stack levels used:    1
   423 ;; Hardware stack levels required when called:    1
   424 ;; This function calls:
   425 ;;		_ToggleEpinOfLCD
   426 ;; This function is called by:
   427 ;;		_WriteStringToLCD
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           
   432                           ;psect for function _WriteDataToLCD
   433  0744                     _WriteDataToLCD:	
   434                           
   435                           ;incstack = 0
   436                           ; Regs used in _WriteDataToLCD: [wreg+status,2+status,0+pclath+cstack]
   437                           ;WriteDataToLCD@LCDChar stored from wreg
   438  0744  00F2               	movwf	WriteDataToLCD@LCDChar
   439                           
   440                           ;LCD.c: 23: RD1 = 1;
   441  0745  1283               	bcf	3,5	;RP0=0, select bank0
   442  0746  1303               	bcf	3,6	;RP1=0, select bank0
   443  0747  1488               	bsf	8,1	;volatile
   444                           
   445                           ;LCD.c: 24: PORTB = LCDChar;
   446  0748  0872               	movf	WriteDataToLCD@LCDChar,w
   447  0749  0086               	movwf	6	;volatile
   448                           
   449                           ;LCD.c: 26: ToggleEpinOfLCD();
   450  074A  120A  118A  276F   	fcall	_ToggleEpinOfLCD
   451  074D  0008               	return
   452  074E                     __end_of_WriteDataToLCD:	
   453                           
   454                           	psect	text3
   455  07A4                     __ptext3:	
   456 ;; *************** function _InitLCD *****************
   457 ;; Defined at:
   458 ;;		line 29 in file "LCD.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;		None
   463 ;; Return value:  Size  Location     Type
   464 ;;                  1    wreg      void 
   465 ;; Registers used:
   466 ;;		wreg, status,2, status,0, pclath, cstack
   467 ;; Tracked objects:
   468 ;;		On entry : 0/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   472 ;;      Params:         0       0       0       0       0
   473 ;;      Locals:         0       0       0       0       0
   474 ;;      Temps:          3       0       0       0       0
   475 ;;      Totals:         3       0       0       0       0
   476 ;;Total ram usage:        3 bytes
   477 ;; Hardware stack levels used:    1
   478 ;; Hardware stack levels required when called:    2
   479 ;; This function calls:
   480 ;;		_WriteCommandToLCD
   481 ;; This function is called by:
   482 ;;		_main
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486                           
   487                           ;psect for function _InitLCD
   488  07A4                     _InitLCD:	
   489                           
   490                           ;LCD.c: 32: RD0 = 0;
   491                           
   492                           ;incstack = 0
   493                           ; Regs used in _InitLCD: [wreg+status,2+status,0+pclath+cstack]
   494  07A4  1283               	bcf	3,5	;RP0=0, select bank0
   495  07A5  1303               	bcf	3,6	;RP1=0, select bank0
   496  07A6  1008               	bcf	8,0	;volatile
   497                           
   498                           ;LCD.c: 33: RD1 = 0;
   499  07A7  1088               	bcf	8,1	;volatile
   500                           
   501                           ;LCD.c: 34: PORTB = 0;
   502  07A8  0186               	clrf	6	;volatile
   503                           
   504                           ;LCD.c: 35: TRISD0 = 0;
   505  07A9  1683               	bsf	3,5	;RP0=1, select bank1
   506  07AA  1303               	bcf	3,6	;RP1=0, select bank1
   507  07AB  1008               	bcf	8,0	;volatile
   508                           
   509                           ;LCD.c: 36: TRISD1 = 0;
   510  07AC  1088               	bcf	8,1	;volatile
   511                           
   512                           ;LCD.c: 37: TRISB = 0;
   513  07AD  0186               	clrf	6	;volatile
   514                           
   515                           ;LCD.c: 40: _delay((unsigned long)((40)*(20000000/4000.0)));
   516  07AE  3002               	movlw	2
   517  07AF  00F5               	movwf	??_InitLCD+2
   518  07B0  3004               	movlw	4
   519  07B1  00F4               	movwf	??_InitLCD+1
   520  07B2  30BA               	movlw	186
   521  07B3  00F3               	movwf	??_InitLCD
   522  07B4                     u37:	
   523  07B4  0BF3               	decfsz	??_InitLCD,f
   524  07B5  2FB4               	goto	u37
   525  07B6  0BF4               	decfsz	??_InitLCD+1,f
   526  07B7  2FB4               	goto	u37
   527  07B8  0BF5               	decfsz	??_InitLCD+2,f
   528  07B9  2FB4               	goto	u37
   529  07BA  0000               	nop
   530                           
   531                           ;LCD.c: 41: WriteCommandToLCD(0x30);
   532  07BB  3030               	movlw	48
   533  07BC  120A  118A  273A  120A  118A  	fcall	_WriteCommandToLCD
   534                           
   535                           ;LCD.c: 43: _delay((unsigned long)((6)*(20000000/4000.0)));
   536  07C1  3027               	movlw	39
   537  07C2  00F4               	movwf	??_InitLCD+1
   538  07C3  30F5               	movlw	245
   539  07C4  00F3               	movwf	??_InitLCD
   540  07C5                     u47:	
   541  07C5  0BF3               	decfsz	??_InitLCD,f
   542  07C6  2FC5               	goto	u47
   543  07C7  0BF4               	decfsz	??_InitLCD+1,f
   544  07C8  2FC5               	goto	u47
   545                           
   546                           ;LCD.c: 44: WriteCommandToLCD(0x30);
   547  07C9  3030               	movlw	48
   548  07CA  120A  118A  273A  120A  118A  	fcall	_WriteCommandToLCD
   549                           
   550                           ;LCD.c: 46: _delay((unsigned long)((300)*(20000000/4000000.0)));
   551  07CF  30D6               	movlw	214
   552  07D0  00F3               	movwf	??_InitLCD
   553  07D1                     u57:	
   554  07D1  2FD2               	nop2
   555  07D2  2FD3               	nop2
   556  07D3  0BF3               	decfsz	??_InitLCD,f
   557  07D4  2FD1               	goto	u57
   558  07D5  0000               	nop
   559                           
   560                           ;LCD.c: 47: WriteCommandToLCD(0x30);
   561  07D6  3030               	movlw	48
   562  07D7  120A  118A  273A  120A  118A  	fcall	_WriteCommandToLCD
   563                           
   564                           ;LCD.c: 49: _delay((unsigned long)((2)*(20000000/4000.0)));
   565  07DC  300D               	movlw	13
   566  07DD  00F4               	movwf	??_InitLCD+1
   567  07DE  30FB               	movlw	251
   568  07DF  00F3               	movwf	??_InitLCD
   569  07E0                     u67:	
   570  07E0  0BF3               	decfsz	??_InitLCD,f
   571  07E1  2FE0               	goto	u67
   572  07E2  0BF4               	decfsz	??_InitLCD+1,f
   573  07E3  2FE0               	goto	u67
   574  07E4  2FE5               	nop2
   575                           
   576                           ;LCD.c: 52: WriteCommandToLCD(0x38);
   577  07E5  3038               	movlw	56
   578  07E6  120A  118A  273A  120A  118A  	fcall	_WriteCommandToLCD
   579                           
   580                           ;LCD.c: 53: WriteCommandToLCD(0x0c);
   581  07EB  300C               	movlw	12
   582  07EC  120A  118A  273A  120A  118A  	fcall	_WriteCommandToLCD
   583                           
   584                           ;LCD.c: 54: WriteCommandToLCD(0x01);
   585  07F1  3001               	movlw	1
   586  07F2  120A  118A  273A  120A  118A  	fcall	_WriteCommandToLCD
   587                           
   588                           ;LCD.c: 55: WriteCommandToLCD(0x06);
   589  07F7  3006               	movlw	6
   590  07F8  120A  118A  273A   	fcall	_WriteCommandToLCD
   591  07FB  0008               	return
   592  07FC                     __end_of_InitLCD:	
   593                           
   594                           	psect	text4
   595  074E                     __ptext4:	
   596 ;; *************** function _ClearLCDScreen *****************
   597 ;; Defined at:
   598 ;;		line 67 in file "LCD.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;		None
   601 ;; Auto vars:     Size  Location     Type
   602 ;;		None
   603 ;; Return value:  Size  Location     Type
   604 ;;                  1    wreg      void 
   605 ;; Registers used:
   606 ;;		wreg, status,2, status,0, pclath, cstack
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   612 ;;      Params:         0       0       0       0       0
   613 ;;      Locals:         0       0       0       0       0
   614 ;;      Temps:          2       0       0       0       0
   615 ;;      Totals:         2       0       0       0       0
   616 ;;Total ram usage:        2 bytes
   617 ;; Hardware stack levels used:    1
   618 ;; Hardware stack levels required when called:    2
   619 ;; This function calls:
   620 ;;		_WriteCommandToLCD
   621 ;; This function is called by:
   622 ;;		_main
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626                           
   627                           ;psect for function _ClearLCDScreen
   628  074E                     _ClearLCDScreen:	
   629                           
   630                           ;LCD.c: 69: WriteCommandToLCD(0x01);
   631                           
   632                           ;incstack = 0
   633                           ; Regs used in _ClearLCDScreen: [wreg+status,2+status,0+pclath+cstack]
   634  074E  3001               	movlw	1
   635  074F  120A  118A  273A  120A  118A  	fcall	_WriteCommandToLCD
   636                           
   637                           ;LCD.c: 70: _delay((unsigned long)((2)*(20000000/4000.0)));
   638  0754  300D               	movlw	13
   639  0755  00F4               	movwf	??_ClearLCDScreen+1
   640  0756  30FB               	movlw	251
   641  0757  00F3               	movwf	??_ClearLCDScreen
   642  0758                     u77:	
   643  0758  0BF3               	decfsz	??_ClearLCDScreen,f
   644  0759  2F58               	goto	u77
   645  075A  0BF4               	decfsz	??_ClearLCDScreen+1,f
   646  075B  2F58               	goto	u77
   647  075C  2F5D               	nop2
   648  075D  0008               	return
   649  075E                     __end_of_ClearLCDScreen:	
   650                           
   651                           	psect	text5
   652  073A                     __ptext5:	
   653 ;; *************** function _WriteCommandToLCD *****************
   654 ;; Defined at:
   655 ;;		line 13 in file "LCD.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;  Command         1    wreg     unsigned char 
   658 ;; Auto vars:     Size  Location     Type
   659 ;;  Command         1    2[COMMON] unsigned char 
   660 ;; Return value:  Size  Location     Type
   661 ;;                  1    wreg      void 
   662 ;; Registers used:
   663 ;;		wreg, status,2, status,0, pclath, cstack
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   669 ;;      Params:         0       0       0       0       0
   670 ;;      Locals:         1       0       0       0       0
   671 ;;      Temps:          0       0       0       0       0
   672 ;;      Totals:         1       0       0       0       0
   673 ;;Total ram usage:        1 bytes
   674 ;; Hardware stack levels used:    1
   675 ;; Hardware stack levels required when called:    1
   676 ;; This function calls:
   677 ;;		_ToggleEpinOfLCD
   678 ;; This function is called by:
   679 ;;		_InitLCD
   680 ;;		_ClearLCDScreen
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684                           
   685                           ;psect for function _WriteCommandToLCD
   686  073A                     _WriteCommandToLCD:	
   687                           
   688                           ;incstack = 0
   689                           ; Regs used in _WriteCommandToLCD: [wreg+status,2+status,0+pclath+cstack]
   690                           ;WriteCommandToLCD@Command stored from wreg
   691  073A  00F2               	movwf	WriteCommandToLCD@Command
   692                           
   693                           ;LCD.c: 15: RD1 = 0;
   694  073B  1283               	bcf	3,5	;RP0=0, select bank0
   695  073C  1303               	bcf	3,6	;RP1=0, select bank0
   696  073D  1088               	bcf	8,1	;volatile
   697                           
   698                           ;LCD.c: 16: PORTB = Command;
   699  073E  0872               	movf	WriteCommandToLCD@Command,w
   700  073F  0086               	movwf	6	;volatile
   701                           
   702                           ;LCD.c: 18: ToggleEpinOfLCD();
   703  0740  120A  118A  276F   	fcall	_ToggleEpinOfLCD
   704  0743  0008               	return
   705  0744                     __end_of_WriteCommandToLCD:	
   706                           
   707                           	psect	text6
   708  076F                     __ptext6:	
   709 ;; *************** function _ToggleEpinOfLCD *****************
   710 ;; Defined at:
   711 ;;		line 4 in file "LCD.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;		None
   714 ;; Auto vars:     Size  Location     Type
   715 ;;		None
   716 ;; Return value:  Size  Location     Type
   717 ;;                  1    wreg      void 
   718 ;; Registers used:
   719 ;;		wreg
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   725 ;;      Params:         0       0       0       0       0
   726 ;;      Locals:         0       0       0       0       0
   727 ;;      Temps:          2       0       0       0       0
   728 ;;      Totals:         2       0       0       0       0
   729 ;;Total ram usage:        2 bytes
   730 ;; Hardware stack levels used:    1
   731 ;; This function calls:
   732 ;;		Nothing
   733 ;; This function is called by:
   734 ;;		_WriteCommandToLCD
   735 ;;		_WriteDataToLCD
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           
   740                           ;psect for function _ToggleEpinOfLCD
   741  076F                     _ToggleEpinOfLCD:	
   742                           
   743                           ;LCD.c: 6: RD0 = 1;
   744                           
   745                           ;incstack = 0
   746                           ; Regs used in _ToggleEpinOfLCD: [wreg]
   747  076F  1283               	bcf	3,5	;RP0=0, select bank0
   748  0770  1303               	bcf	3,6	;RP1=0, select bank0
   749  0771  1408               	bsf	8,0	;volatile
   750                           
   751                           ;LCD.c: 7: _delay((unsigned long)((500)*(20000000/4000000.0)));
   752  0772  3004               	movlw	4
   753  0773  00F1               	movwf	??_ToggleEpinOfLCD+1
   754  0774  303D               	movlw	61
   755  0775  00F0               	movwf	??_ToggleEpinOfLCD
   756  0776                     u87:	
   757  0776  0BF0               	decfsz	??_ToggleEpinOfLCD,f
   758  0777  2F76               	goto	u87
   759  0778  0BF1               	decfsz	??_ToggleEpinOfLCD+1,f
   760  0779  2F76               	goto	u87
   761  077A  2F7B               	nop2
   762                           
   763                           ;LCD.c: 8: RD0 = 0;
   764  077B  1283               	bcf	3,5	;RP0=0, select bank0
   765  077C  1303               	bcf	3,6	;RP1=0, select bank0
   766  077D  1008               	bcf	8,0	;volatile
   767                           
   768                           ;LCD.c: 9: _delay((unsigned long)((500)*(20000000/4000000.0)));
   769  077E  3004               	movlw	4
   770  077F  00F1               	movwf	??_ToggleEpinOfLCD+1
   771  0780  303D               	movlw	61
   772  0781  00F0               	movwf	??_ToggleEpinOfLCD
   773  0782                     u97:	
   774  0782  0BF0               	decfsz	??_ToggleEpinOfLCD,f
   775  0783  2F82               	goto	u97
   776  0784  0BF1               	decfsz	??_ToggleEpinOfLCD+1,f
   777  0785  2F82               	goto	u97
   778  0786  2F87               	nop2
   779  0787  0008               	return
   780  0788                     __end_of_ToggleEpinOfLCD:	
   781  007E                     btemp	set	126	;btemp
   782  007E                     wtemp0	set	126


Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    WriteStringToLCD@s	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->_InitLCD
    _WriteStringToLCD->_WriteDataToLCD
    _WriteDataToLCD->_ToggleEpinOfLCD
    _InitLCD->_WriteCommandToLCD
    _ClearLCDScreen->_WriteCommandToLCD
    _WriteCommandToLCD->_ToggleEpinOfLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     117
                     _ClearLCDScreen
                            _InitLCD
                   _WriteStringToLCD
 ---------------------------------------------------------------------------------
 (1) _WriteStringToLCD                                     2     2      0      87
                                              3 COMMON     2     2      0
                     _WriteDataToLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataToLCD                                       1     1      0      15
                                              2 COMMON     1     1      0
                    _ToggleEpinOfLCD
 ---------------------------------------------------------------------------------
 (1) _InitLCD                                              3     3      0      15
                                              3 COMMON     3     3      0
                  _WriteCommandToLCD
 ---------------------------------------------------------------------------------
 (1) _ClearLCDScreen                                       2     2      0      15
                                              3 COMMON     2     2      0
                  _WriteCommandToLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCommandToLCD                                    1     1      0      15
                                              2 COMMON     1     1      0
                    _ToggleEpinOfLCD
 ---------------------------------------------------------------------------------
 (3) _ToggleEpinOfLCD                                      2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearLCDScreen
     _WriteCommandToLCD
       _ToggleEpinOfLCD
   _InitLCD
     _WriteCommandToLCD
       _ToggleEpinOfLCD
   _WriteStringToLCD
     _WriteDataToLCD
       _ToggleEpinOfLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Wed Nov 28 14:40:20 2018

                         pc 0002                          l44 076E                          u37 07B4  
                        u47 07C5                          u57 07D1                          u67 07E0  
                        u77 0758                          u87 0776                          u97 0782  
                        fsr 0004                         l577 0789                         _RD0 0040  
                       _RD1 0041                         fsr0 0004                __CFG_FOSC$HS 0000  
              __CFG_LVP$OFF 0000                        STR_1 0009                        _main 075E  
                      btemp 007E                        start 0000             __end_of_InitLCD 07FC  
                     ?_main 0070               __CFG_WDTE$OFF 0000                       _PORTB 0006  
                     _TRISB 0086               __CFG_PWRTE$ON 0000                       pclath 000A  
                     status 0003     __size_of_WriteDataToLCD 000A                       wtemp0 007E  
           _ToggleEpinOfLCD 076F             __initialization 07FC                __end_of_main 076F  
                    ??_main 0076            ??_ClearLCDScreen 0073                      _TRISD0 0440  
                    _TRISD1 0441                   ??_InitLCD 0073           WriteStringToLCD@s 0074  
         ?_WriteStringToLCD 0070          ??_WriteStringToLCD 0073     __end_of_ToggleEpinOfLCD 0788  
   __end_of__initialization 07FC              __pcstackCOMMON 0070    WriteCommandToLCD@Command 0072  
            _WriteDataToLCD 0744                  __pmaintext 075E       WriteDataToLCD@LCDChar 0072  
    __end_of_WriteDataToLCD 074E                  __stringtab 0003            ?_ToggleEpinOfLCD 0070  
                   _InitLCD 07A4                     __ptext1 0788                     __ptext2 0744  
                   __ptext3 07A4                     __ptext4 074E                     __ptext5 073A  
                   __ptext6 076F        end_of_initialization 07FC             ?_WriteDataToLCD 0070  
 __size_of_WriteStringToLCD 001C         start_initialization 07FC     __size_of_ClearLCDScreen 0010  
                 ___latbits 0002                    ?_InitLCD 0070                   __pstrings 0003  
          ??_WriteDataToLCD 0072            _WriteStringToLCD 0788    __size_of_ToggleEpinOfLCD 0019  
               __stringbase 0008              _ClearLCDScreen 074E           _WriteCommandToLCD 073A  
        ?_WriteCommandToLCD 0070            __size_of_InitLCD 0058         ??_WriteCommandToLCD 0072  
        __end_of__stringtab 0009      __end_of_ClearLCDScreen 075E   __end_of_WriteCommandToLCD 0744  
             __size_of_main 0011           ??_ToggleEpinOfLCD 0070             ?_ClearLCDScreen 0070  
                 stringcode 0003    __end_of_WriteStringToLCD 07A4                    stringdir 0003  
                  stringtab 0003  __size_of_WriteCommandToLCD 000A  
